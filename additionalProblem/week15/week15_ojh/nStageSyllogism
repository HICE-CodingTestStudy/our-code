
#include <iostream>

using namespace std;

int n, m, graph[26][26];
bool visited[26];

void dfs(int src, int cur, int dest) {

	if (cur == dest) graph[src][dest] = 1;

	for (int i = 0; i < 26; i++)
		if (graph[cur][i] && !visited[cur]) {
			visited[cur] = true;
			dfs(src, i, dest);
			visited[cur] = false;
		}
}

int main() {

	string s[3];
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> s[0] >> s[1] >> s[2];
		graph[s[0][0] - 'a'][s[2][0] - 'a'] = 1;
	}

	cin >> m;

	for (int i = 0; i < m; i++) {
		cin >> s[0] >> s[1] >> s[2];
		dfs(s[0][0] - 'a', s[0][0] - 'a', s[2][0] - 'a');
		graph[s[0][0] - 'a'][s[2][0] - 'a'] ? cout << 'T' : cout << 'F';
		cout << endl;
	}
}
